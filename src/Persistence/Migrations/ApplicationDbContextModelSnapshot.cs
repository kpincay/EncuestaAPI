// <auto-generated />
using System;
using Encuesta.Persistence.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Workflow.Persistence.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Encuesta.Domain.Entities.Encuestado", b =>
                {
                    b.Property<Guid>("IdEncuestado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("idEncuestado");

                    b.Property<int>("Edad")
                        .HasColumnType("int")
                        .HasColumnName("edad");

                    b.Property<string>("Identificacion")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("varchar(13)")
                        .HasColumnName("identificacion");

                    b.Property<string>("NombresApellidos")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("nombresApellidos");

                    b.Property<string>("Sexo")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("sexo");

                    b.HasKey("IdEncuestado");

                    b.ToTable("Encuestado", "dbo");
                });

            modelBuilder.Entity("Encuesta.Domain.Entities.EncuestaMaestro", b =>
                {
                    b.Property<Guid>("IdEncuesta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("idEncuesta");

                    b.Property<string>("Categoria")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("categoria");

                    b.Property<string>("Escala")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("escala");

                    b.Property<int>("Orden")
                        .HasColumnType("int")
                        .HasColumnName("orden");

                    b.Property<string>("Pregunta")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("pregunta");

                    b.HasKey("IdEncuesta");

                    b.ToTable("EncuestaMaestro", "dbo");
                });

            modelBuilder.Entity("Encuesta.Domain.Entities.EncuestaTransaccion", b =>
                {
                    b.Property<Guid>("IdEncuestaTransaccion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("idEncuestaTransaccion");

                    b.Property<Guid>("IdEncuesta")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("idEncuesta");

                    b.Property<Guid>("IdEncuestado")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("idEncuestado");

                    b.Property<Guid>("IdSucursal")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("idSucursal");

                    b.HasKey("IdEncuestaTransaccion");

                    b.HasIndex("IdEncuesta");

                    b.HasIndex("IdEncuestado");

                    b.HasIndex("IdSucursal");

                    b.ToTable("EncuestaTransaccion", "dbo");
                });

            modelBuilder.Entity("Encuesta.Domain.Entities.Sucursal", b =>
                {
                    b.Property<Guid>("IdSucursal")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("idSucursal");

                    b.Property<string>("NombreCiudad")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("nombreCiudad");

                    b.Property<string>("NombreProvincia")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("nombreProvincia");

                    b.Property<string>("NombreSucursal")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("nombreSucursal");

                    b.HasKey("IdSucursal");

                    b.ToTable("Sucursal", "dbo");
                });

            modelBuilder.Entity("Encuesta.Domain.Entities.EncuestaTransaccion", b =>
                {
                    b.HasOne("Encuesta.Domain.Entities.EncuestaMaestro", "EncuestaMaestro")
                        .WithMany("EncuestaTransaccions")
                        .HasForeignKey("IdEncuesta")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Encuesta.Domain.Entities.Encuestado", "Encuestado")
                        .WithMany("EncuestaTransaccions")
                        .HasForeignKey("IdEncuestado")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Encuesta.Domain.Entities.Sucursal", "Sucursal")
                        .WithMany("EncuestaTransaccions")
                        .HasForeignKey("IdSucursal")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EncuestaMaestro");

                    b.Navigation("Encuestado");

                    b.Navigation("Sucursal");
                });

            modelBuilder.Entity("Encuesta.Domain.Entities.Encuestado", b =>
                {
                    b.Navigation("EncuestaTransaccions");
                });

            modelBuilder.Entity("Encuesta.Domain.Entities.EncuestaMaestro", b =>
                {
                    b.Navigation("EncuestaTransaccions");
                });

            modelBuilder.Entity("Encuesta.Domain.Entities.Sucursal", b =>
                {
                    b.Navigation("EncuestaTransaccions");
                });
#pragma warning restore 612, 618
        }
    }
}
